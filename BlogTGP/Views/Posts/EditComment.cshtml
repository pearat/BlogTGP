@model BlogTGP.Models.Comment

@{
    ViewBag.Title = "Edit Comment";
}
<div style="height: 70px"></div>



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Edit Comment</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)
        @Html.HiddenFor(model => model.PostId)
        @Html.HiddenFor(model => model.AuthorId)
        @Html.HiddenFor(model => model.Created)
        @Html.HiddenFor(model => model.Updated)

        <div class="form-group">
            @Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" style="box-sizing:border-box; padding:7px 27px; ">
                @Html.Raw(Model.Created.DateTime.ToLongDateString())
            </div>
        </div>

        @if (Model.Updated != null)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Updated, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" style="box-sizing:border-box; padding:7px 27px; ">
                    @Html.Raw(Model.Updated.Value.DateTime.ToLongDateString())
                </div>
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Body, new { htmlAttributes = new { @class = "form-control", rows = "5", id = "editor" } })
                @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Details", "Details")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/tinymce/tinymce.min.js"></script>
    <script src="~/Scripts/tinymce/jquery.tinymce.min.js"></script>
    <script>
        $(document).ready(function () {
            $("#editor").tinymce({});
        });
    </script>
}
